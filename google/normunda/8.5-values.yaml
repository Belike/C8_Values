# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml
# See options: https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/README.md

global:
  ingress:
    enabled: true
    className: nginx
    host: "normunda.de"
    tls:
      enabled: true
      secretName: "tls-secret"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      ingress.kubernetes.io/rewrite-target: "/"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  #image:
    #tag: 8.5.0
  identity:
    auth:
      publicIssuerUrl: "https://normunda.de/auth/realms/camunda-platform"
      operate:
        existingSecret:
          name: static-secret
        redirectUrl: "https://normunda.de/operate"
      tasklist:
        existingSecret:
          name: static-secret
        redirectUrl: "https://normunda.de/tasklist"

operate:
  contextPath: "/operate"

tasklist:
  contextPath: "/tasklist"

optimize:
  enabled: false

connectors:
  enabled: false

identity:
  contextPath: "/identity"
  fullURL: "https://normunda.de/identity"

identityKeycloak:
  auth:
    adminPassword: EasySecret
    managementPassword: EasySecret
  extraEnvVars:
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_FRONTEND_URL
      value: "https://normunda.de/auth"

zeebeGateway:
  env:
    - name: ZEEBE_GATEWAY_SECURITY_AUTHENTICATION_MODE
      value: "none"
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "zeebe.normunda.de"
      tls:
        enabled: true
        secretName: "tls-secret"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        ingress.kubernetes.io/rewrite-target: "/"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    rest:
      enabled: false
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2048Mi"
      cpu: "1000m"

zeebe:
  clusterSize: 1
  partitionCount: 1
  replicationFactor: 1
  pvcSize: 10Gi

  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "512m"
      memory: "2Gi"

elasticsearch:
  master:
    replicaCount: 1
  global:
    kibanaEnabled: true
  kibana:
    image:
      tag: 8.9.2
    ingress:
      tls: true
      ingressClassName: nginx
      enabled: true
      hostname: "normunda.de"
      path: "/kibana"
      annotations:
        cert-manager.io/issuer: "letsencrypt-prod"
        ingress.kubernetes.io/rewrite-target: "/"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
    configuration:
      server:
        basePath: "/kibana"
        rewriteBasePath: true
    readinessProbe:
      enabled: false

  #initScripts:
    #init-keystore.sh: |
    #  #!/bin/bash
    #  set -e#

#      echo "Adding S3 access keys to Elasticsearch keystore..."

      # Add S3 client default keys to the keystore
 #     echo "$S3_SECRET_KEY" | elasticsearch-keystore add -f -x s3.client.default.secret_key
  #    echo "$S3_ACCESS_KEY" | elasticsearch-keystore add -f -x s3.client.default.access_key

  extraEnvVars:
    - name: S3_SECRET_KEY
      value: minioadmin
    - name: S3_ACCESS_KEY
      value: minioadmin